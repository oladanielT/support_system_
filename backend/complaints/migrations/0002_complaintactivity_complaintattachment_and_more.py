# Generated by Django 5.1.4 on 2025-07-29 21:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('complaints', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplaintActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('assigned', 'Assigned'), ('status_changed', 'Status Changed'), ('priority_changed', 'Priority Changed'), ('comment_added', 'Comment Added'), ('resolved', 'Resolved'), ('closed', 'Closed')], max_length=20)),
                ('description', models.TextField()),
                ('old_value', models.CharField(blank=True, max_length=100)),
                ('new_value', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'complaint_activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='complaint_attachments/')),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'complaint_attachments',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'complaint_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('status_change', 'Status Change'), ('assignment', 'Assignment'), ('priority_change', 'Priority Change'), ('comment', 'Comment'), ('resolution', 'Resolution'), ('creation', 'Creation')], max_length=20)),
                ('message', models.TextField()),
                ('old_status', models.CharField(blank=True, max_length=15)),
                ('new_status', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'complaint_updates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='complaint',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='complaint',
            name='admin_notes',
            field=models.TextField(blank=True, help_text='Internal admin notes'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='assigned_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='complaint',
            name='category',
            field=models.CharField(choices=[('network_slow', 'Network Slow'), ('network_down', 'Network Down'), ('wifi_issues', 'WiFi Issues'), ('server_issues', 'Server Issues'), ('email_issues', 'Email Issues'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AddField(
            model_name='complaint',
            name='contact_info',
            field=models.CharField(blank=True, help_text='Phone/Email for contact', max_length=200),
        ),
        migrations.AddField(
            model_name='complaint',
            name='is_synced',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='complaint',
            name='location',
            field=models.CharField(blank=True, help_text='Building/Room location', max_length=100),
        ),
        migrations.AddField(
            model_name='complaint',
            name='offline_id',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='complaint',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10),
        ),
        migrations.AddField(
            model_name='complaint',
            name='resolution_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='complaint',
            name='resolved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='complaint',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='assigned_to',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'engineer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_complaints', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='description',
            field=models.TextField(validators=[django.core.validators.MinLengthValidator(10)]),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='pending', max_length=15),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='submitted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_complaints', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='title',
            field=models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)]),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['status'], name='complaints_status_3d57ee_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['priority'], name='complaints_priorit_2581ce_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['created_at'], name='complaints_created_a37218_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['assigned_to'], name='complaints_assigne_8eb502_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['offline_id'], name='complaints_offline_315e75_idx'),
        ),
        migrations.AlterModelTable(
            name='complaint',
            table='complaints',
        ),
        migrations.AddField(
            model_name='complaintactivity',
            name='complaint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaintactivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complaintattachment',
            name='complaint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaintattachment',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complaintcomment',
            name='complaint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaintcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complaintupdate',
            name='complaint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='complaints.complaint'),
        ),
        migrations.AddField(
            model_name='complaintupdate',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
